#+TITLE: Emacs Doctor
*** Learn Emacs Lisp in 15 minutes

#+BEGIN_SRC emacs-lisp

  ;; This gives an introduction to Emacs Lisp in 15 minutes
  ;;
  ;; Author: Bastien / @bzg2 / https://bzg.fr
  ;;
  ;; First make sure you read this text by Peter Norvig:
  ;; http://norvig.com/21-days.html
  ;;
  ;; Then install GNU Emacs 24.3
  ;;
  ;; Debian: apt-get install emacs (or see your distro instructions)
  ;; MacOSX: http://emacsformacosx.com/emacs-builds/Emacs-24.3-universal-10.6.8.dmg
  ;; Windows: http://ftp.gnu.org/gnu/emacs/emacs-24.3-bin-i386.zip
  ;;
  ;; More general Information can be found at:
  ;;

  ;; Important warning:
  ;;
  ;; Going thorugh this tutorial won't damage your computer unless
  ;; you get so angry that you throw it on the floor. In that case,
  ;; I hereby decline any responsibility. Have fun!

  ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;;
  ;; Fire Up Emacs;
  ;;
  ;; Hit the 'q' key to dismiss the welcome message
  ;;
  ;; "*scratch*" is the name of the editing space you are now in.
  ;; This editing space is called a "buffer"
  ;;
  ;; The scratch buffer is the default buffer when opening Emacs.
  ;; You are never editing files: you are editing buffers that you can save to a file.
  ;;
  ;;
  ;; "Lisp interaction" refers to a set of commands available here.
  ;;
  ;; Emacs has a built-in set of commands available in every buffer,
  ;; and several subsets of commands available when you activate a specific mode. Here we use the 'lisp-interaction-mode', which comes with commands to evaluate and navigate within Elisp
  ;;;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; Semi-colons start comments anywhere in the line.
  ;; Elisp porgrams are made of symbolic expressions ("sexps"):
  (+ 2 2)

  ;; This symbolic expression reads as "Add 2 to 2"
  (+ 2 (+ 1 1))

  ;; Sexps are enclosed into parentheses, possibly nested:
  (+ 2 (+ 1 1))

  ;; A symbolic expression contains atoms or other symbolic
  ;; expressions. In the above examples, 1 and 2 are atoms,
  ;; (+ 2 (+ 1 1)) and (+ 1 1) are symbolic expressions.

  ;; From 'lisp-interaction-mode' you can evaluate sexps.
  ;; Put the cursor right after the closing parenthesis then
  (+ 3 (+ 1 2))

  ;; ^ cursor here
  ;; 'C-j' => 6
  ;; 'C-j' inserts the results of the evaluation in the buffer.

  ;; 'C-x C-e' displays the same result in Emacs bottom Line,
  ;; called the "minibuffer". We will generally use 'C-x C-e',
  ;; as we don't want to clutter the buffer with useless text.

  ;; 'setq' stores a value into a variable:
  (setq my-name "Alamin")
  (setq my-email "alamin.ineedahelp@gmail.com")
  (setq my-currently-showing-tv-show "Friends")

  ;; insert will insert 'Hello' where the currsor is:
  (insert "Hello!")
  ;; "C-x C-e" => "Hello!"

  ;; We used 'insert' with only one argument "Hello!", but we can pass more arguments -- here we use two:

  (insert "Hello" " " "world")
  ;; "C-x C-e" => "Hello world"

#+END_SRC
