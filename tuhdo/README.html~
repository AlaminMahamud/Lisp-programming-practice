<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>tuhdo's guide on Emacs as a C/C++ Environment.</title>
<!-- 2017-05-29 Mon 12:22 -->
<meta  http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta  name="generator" content="Org-mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center; }
  .todo   { font-family: monospace; color: red; }
  .done   { color: green; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  pre.src-sh:before    { content: 'sh'; }
  pre.src-bash:before  { content: 'sh'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-R:before     { content: 'R'; }
  pre.src-perl:before  { content: 'Perl'; }
  pre.src-java:before  { content: 'Java'; }
  pre.src-sql:before   { content: 'SQL'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.right  { text-align: center;  }
  th.left   { text-align: center;   }
  th.center { text-align: center; }
  td.right  { text-align: right;  }
  td.left   { text-align: left;   }
  td.center { text-align: center; }
  dt { font-weight: bold; }
  .footpara:nth-child(2) { display: inline; }
  .footpara { display: block; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
<script type="text/javascript" src="http://orgmode.org/mathjax/MathJax.js"></script>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
    MathJax.Hub.Config({
        // Only one of the two following lines, depending on user settings
        // First allows browser-native MathML display, second forces HTML/CSS
        //  config: ["MMLorHTML.js"], jax: ["input/TeX"],
            jax: ["input/TeX", "output/HTML-CSS"],
        extensions: ["tex2jax.js","TeX/AMSmath.js","TeX/AMSsymbols.js",
                     "TeX/noUndefined.js"],
        tex2jax: {
            inlineMath: [ ["\\(","\\)"] ],
            displayMath: [ ['$$','$$'], ["\\[","\\]"], ["\\begin{displaymath}","\\end{displaymath}"] ],
            skipTags: ["script","noscript","style","textarea","pre","code"],
            ignoreClass: "tex2jax_ignore",
            processEscapes: false,
            processEnvironments: true,
            preview: "TeX"
        },
        showProcessingMessages: true,
        displayAlign: "center",
        displayIndent: "2em",

        "HTML-CSS": {
             scale: 100,
             availableFonts: ["STIX","TeX"],
             preferredFont: "TeX",
             webFont: "TeX",
             imageFont: "TeX",
             showMathMenu: true,
        },
        MMLorHTML: {
             prefer: {
                 MSIE:    "MML",
                 Firefox: "MML",
                 Opera:   "HTML",
                 other:   "HTML"
             }
        }
    });
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">tuhdo's guide on Emacs as a C/C++ Environment.</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Emacs Mini Manual (Part 1) - The Basics</a>
<ul>
<li><a href="#sec-1-1">1.1. Before We Start</a></li>
<li><a href="#sec-1-2">1.2. Why Emacs ?</a></li>
<li><a href="#sec-1-3">1.3. Why this guide ?</a></li>
<li><a href="#sec-1-4">1.4. A Bit of history</a></li>
<li><a href="#sec-1-5">1.5. "I don't want a complicated editor, I want something simple like Notepad"</a></li>
<li><a href="#sec-1-6">1.6. Installation</a></li>
<li><a href="#sec-1-7">1.7. <span class="todo TODO">TODO</span> Swapping Control and Caps-Lock.</a></li>
<li><a href="#sec-1-8">1.8. Concepts</a>
<ul>
<li><a href="#sec-1-8-1">1.8.1. Command</a></li>
</ul>
</li>
<li><a href="#sec-1-9">1.9. Emacs Key notation</a></li>
<li><a href="#sec-1-10">1.10. Emacs Keys are easy to remember</a></li>
<li><a href="#sec-1-11">1.11. Ask for help - from Emacs</a>
<ul>
<li><a href="#sec-1-11-1">1.11.1. Built-in help system</a></li>
<li><a href="#sec-1-11-2">1.11.2. Info</a></li>
<li><a href="#sec-1-11-3">1.11.3. Man</a></li>
</ul>
</li>
<li><a href="#sec-1-12">1.12. Point</a></li>
<li><a href="#sec-1-13">1.13. Opening Files</a></li>
<li><a href="#sec-1-14">1.14. Ido mode</a></li>
<li><a href="#sec-1-15">1.15. Buffer</a></li>
<li><a href="#sec-1-16">1.16. Major Mode</a></li>
<li><a href="#sec-1-17">1.17. Minor Mode</a></li>
<li><a href="#sec-1-18">1.18. Basic Buffer Management</a></li>
<li><a href="#sec-1-19">1.19. Bookmark: save locations across Emacs sessions</a></li>
<li><a href="#sec-1-20">1.20. Basic Motion Commands</a></li>
<li><a href="#sec-1-21">1.21. Useful Built-in key bindings for navigating pairs</a></li>
<li><a href="#sec-1-22">1.22. Basic editing commands</a></li>
<li><a href="#sec-1-23">1.23. Dynamic abbreviations</a></li>
<li><a href="#sec-1-24">1.24. kill ring</a></li>
<li><a href="#sec-1-25">1.25. Mark and region</a></li>
<li><a href="#sec-1-26">1.26. Mark ring</a></li>
<li><a href="#sec-1-27">1.27. Global Mark Ring</a></li>
<li><a href="#sec-1-28">1.28. Undo/Redo</a></li>
<li><a href="#sec-1-29">1.29. Search for Text</a>
<ul>
<li><a href="#sec-1-29-1">1.29.1. Incremental Search</a></li>
<li><a href="#sec-1-29-2">1.29.2. Occur</a></li>
<li><a href="#sec-1-29-3">1.29.3. Query Replace</a></li>
<li><a href="#sec-1-29-4">1.29.4. Multi-occur</a></li>
<li><a href="#sec-1-29-5">1.29.5. Grep</a></li>
</ul>
</li>
<li><a href="#sec-1-30">1.30. Modeline</a></li>
<li><a href="#sec-1-31">1.31. MiniBuffer</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Emacs Mini Manual (Part 1) - The Basics</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> Before We Start</h3>
</div>
<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> Why Emacs ?</h3>
<div class="outline-text-3" id="text-1-2">
<p>
In Emacs, you can do manu things aside form editing. Emacs is a programming platform, not just another editor in the sense that people ting. For more details, read the Appendix.
</p>

<p>
Take a [[<a href="http://www.gnu.org/software/emacs/tour/">http://www.gnu.org/software/emacs/tour/</a>][tour]] from the official Emacs homepage.
</p>

<p>
here is my personal tour, with 3rd party plugins added. Don't worry if your nEmacs does not look like the screenshots. You can have something like mine and even better, but for now you need to get a solid foundation. The screenshots are just for show. Even though, after going through this guide, you will be able to browse the Linux kernel source tree with ease.
</p>
<ul class="org-ul">
<li>Performance: Editina  39MB C source file with no problem. But well, it's not your favourite editor's fault if it crashes from editing such a large source file.
</li>
</ul>

<div id="performance.gif" class="figure">
<p><img src="./performance.gif" alt="performance.gif" />
</p>
<p><span class="figure-number">Figure 1:</span> This is the caption for performance.gif</p>
</div>
<ul class="org-ul">
<li>Programming
<ul class="org-ul">
<li>Jump to any header file:
</li>
</ul>
<p>
[[./jump<sub>headers</sub>.gif
</p>
</li>
</ul>
<p>
]]  + Autocompletion: Pay attention to completion candidates when <code>include &lt;linux/printk.h&gt;</code> is present and when it's not.
  <img src="./auto_complete.gif" alt="auto_complete.gif" />
</p>
<ul class="org-ul">
<li>Showing funciton arguments.
</li>
</ul>

<div class="figure">
<p><img src="./func_args.gif" alt="func_args.gif" />
</p>
</div>
<ul class="org-ul">
<li>Quickly comment multiple lines:
</li>
</ul>

<div class="figure">
<p><img src="./comment.gif" alt="comment.gif" />
</p>
</div>
<ul class="org-ul">
<li>GDB:
</li>
</ul>

<div class="figure">
<p><img src="./gdb-many-windows.gif" alt="gdb-many-windows.gif" />
</p>
</div>
<ul class="org-ul">
<li>Diff between current editing file and latest file revision:
</li>
</ul>

<div class="figure">
<p><img src="./vc-diff.jpg" alt="vc-diff.jpg" />
</p>
</div>
<ul class="org-ul">
<li>Magit: From unstage -&gt; stage -&gt; commit -&gt; push
</li>
</ul>

<div class="figure">
<p><img src="./magit.gif" alt="magit.gif" />
</p>
</div>
<ul class="org-ul">
<li>Live Grep:
</li>
</ul>

<div class="figure">
<p><img src="./live_grep.gif" alt="live_grep.gif" />
</p>
</div>
<ul class="org-ul">
<li>Quickly select any file in a directory under a version control System, for example from the Linux kernel. Note that in the demos you may see me type in the commands. You can think of it like the start menu in Windows, but those commands can actually be executed quickly with a shortcut.
</li>
</ul>

<div class="figure">
<p><img src="./help-projectile-find-files-1.gif" alt="help-projectile-find-files-1.gif" />
</p>
</div>
<ul class="org-ul">
<li>Quickly select any file/directory from a previous working session:
</li>
</ul>

<div class="figure">
<p><img src="./helm-buffer-list.gif" alt="helm-buffer-list.gif" />
</p>
</div>
<ul class="org-ul">
<li>Emacs as a PDF Reader: I can search text in the PDF file with highlighting and a gable of contents side by side. All can be controlled with Keyboard.
</li>
</ul>
<p>
<img src="./emacs-read-pdf.gif" alt="emacs-read-pdf.gif" />
Finally, <a href="http://jtnimoy.net/workviewer.php?q">Emacs is featured in TRON LEGACY</a>.
</p>
</div>
</div>
<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> Why this guide ?</h3>
<div class="outline-text-3" id="text-1-3">
<p>
Let's look at part of the Emacs manual:
<img src="./emacs-manual-toc.gif" alt="emacs-manual-toc.gif" />
"All about handling files" is inside the <code>Files</code> entry, which includes how to open files, save files, rever and auto-revert files, compare files&#x2026;, many things from basic to advanced. If you are a beginner reading the Emacs manual, you have to actively search the manual to learn how to do the basic common tasks you know from other editors.
</p>

<p>
It would take a long time before you can start using Emacs for basic opertaions (e.g. opening files) if you read the manual cover to cover. The "Fundamental Editing Commands" section is placed before the "Major Structures of Emacs" section that contains information on file handling. How can you learn the basic editing commands if you don't even know how to open a file? The problem with the manual is that it's not organized for a new Emacs user to progressively learn Emacs.
</p>

<p>
I want to help you use Emacs efficiently in a relaticely short amount of time, probably around a week. That
s why I wrote this guide especially for complete beginners. The Emacs manual is excellent, but it would be much easier with a solid ground understanding and after using Emacs for a while.
</p>

<p>
This guide provides a good starting point for the official Emacs manual. The GNU Emacs toud would be a nice tutorial, only if it isn't made for demonstration.
</p>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> A Bit of history</h3>
<div class="outline-text-3" id="text-1-4">
<p>
Quote from the GNU Emacs homepage:
</p>

<blockquote>
<p>
For those curious about Emacs history: Emacs was originally implemented in 1976 on the MIT AI Lab's Incompatible Timesharing System (ITS), as a collection of TECO macros. The name "Emacs" was originally chosen as an abbreviation of "Editor MACroS". This version of Emacs, GNU Emacs, was originally written in 1984. For more information, see the 1981 paper by Richard Stqallman, describing the design of the original Emacs and the lessons to be learned from it, and a transcript of his 2002 speech at the International LISP conference. My Lisp Experiences and the Development of GNU Emacs. Here is the cover of the original Emacs Manual for ITS; the cover of the original Emacs Manual for Twenex; and (the only cartoon RMS has ever drawn) the Self-Documenting Extensible Editor.
</p>
</blockquote>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5"><span class="section-number-3">1.5</span> "I don't want a complicated editor, I want something simple like Notepad"</h3>
</div>
<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6"><span class="section-number-3">1.6</span> Installation</h3>
</div>
<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7"><span class="section-number-3">1.7</span> <span class="todo TODO">TODO</span> Swapping Control and Caps-Lock.</h3>
</div>
<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8"><span class="section-number-3">1.8</span> Concepts</h3>
<div class="outline-text-3" id="text-1-8">
</div><div id="outline-container-sec-1-8-1" class="outline-4">
<h4 id="sec-1-8-1"><span class="section-number-4">1.8.1</span> Command</h4>
<div class="outline-text-4" id="text-1-8-1">
<p>
In Emacs, every user interaction is a function execution. You preses a key to insert a character, Emacs runs <code>self-insert-command</code>. There are two types of functions in Emacs:
</p>

<ul class="org-ul">
<li>Normal Functions: These are like functions in other programming Languages, and are used for implementing features in Emacs. Users do not need to care about these functions, unless they want to implement something or modfiy an existing implementation.
</li>
<li>Commands: Commands are like functions, but interactive. It meanse, commands are features provided to users and users directly use them.
</li>
</ul>

<p>
<code>execute-extended-command</code> is bound to M-x.
</p>
</div>
</div>
</div>

<div id="outline-container-sec-1-9" class="outline-3">
<h3 id="sec-1-9"><span class="section-number-3">1.9</span> Emacs Key notation</h3>
<div class="outline-text-3" id="text-1-9">
<table id="tab:-basic-emacs-key-notation" border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">Table 1:</span> This is the caption for my first table</caption>

<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">Prefix</td>
<td class="left">Meaning</td>
</tr>

<tr>
<td class="left"><code>C-</code></td>
<td class="left">(press and hold) the Control key</td>
</tr>

<tr>
<td class="left"><code>M-</code></td>
<td class="left">the Meta key (the Alt key, on most keyboards)</td>
</tr>

<tr>
<td class="left"><code>S-</code></td>
<td class="left">the Shift key (e.g. "S-TAB" means Shift Tab)</td>
</tr>

<tr>
<td class="left"><code>DEL</code></td>
<td class="left">the Backspace key (not the Delete Key). Inside Emacs, DEL is written as <code>&lt;backspace&gt;</code></td>
</tr>

<tr>
<td class="left"><code>RET</code></td>
<td class="left">the Return or Enter key</td>
</tr>

<tr>
<td class="left"><code>SPC</code></td>
<td class="left">the Space Bar key</td>
</tr>

<tr>
<td class="left"><code>ESC</code></td>
<td class="left">the Escape Key</td>
</tr>

<tr>
<td class="left"><code>TAB</code></td>
<td class="left">the TAB key</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-1-10" class="outline-3">
<h3 id="sec-1-10"><span class="section-number-3">1.10</span> Emacs Keys are easy to remember</h3>
<div class="outline-text-3" id="text-1-10">
<ul class="org-ul">
<li>C-x
</li>
<li>C-c
</li>
<li>C-u
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-1-11" class="outline-3">
<h3 id="sec-1-11"><span class="section-number-3">1.11</span> Ask for help - from Emacs</h3>
<div class="outline-text-3" id="text-1-11">
</div><div id="outline-container-sec-1-11-1" class="outline-4">
<h4 id="sec-1-11-1"><span class="section-number-4">1.11.1</span> Built-in help system</h4>
</div>
<div id="outline-container-sec-1-11-2" class="outline-4">
<h4 id="sec-1-11-2"><span class="section-number-4">1.11.2</span> Info</h4>
</div>
<div id="outline-container-sec-1-11-3" class="outline-4">
<h4 id="sec-1-11-3"><span class="section-number-4">1.11.3</span> Man</h4>
</div>
</div>
<div id="outline-container-sec-1-12" class="outline-3">
<h3 id="sec-1-12"><span class="section-number-3">1.12</span> Point</h3>
</div>
<div id="outline-container-sec-1-13" class="outline-3">
<h3 id="sec-1-13"><span class="section-number-3">1.13</span> Opening Files</h3>
</div>
<div id="outline-container-sec-1-14" class="outline-3">
<h3 id="sec-1-14"><span class="section-number-3">1.14</span> Ido mode</h3>
</div>
<div id="outline-container-sec-1-15" class="outline-3">
<h3 id="sec-1-15"><span class="section-number-3">1.15</span> Buffer</h3>
</div>
<div id="outline-container-sec-1-16" class="outline-3">
<h3 id="sec-1-16"><span class="section-number-3">1.16</span> Major Mode</h3>
</div>
<div id="outline-container-sec-1-17" class="outline-3">
<h3 id="sec-1-17"><span class="section-number-3">1.17</span> Minor Mode</h3>
</div>
<div id="outline-container-sec-1-18" class="outline-3">
<h3 id="sec-1-18"><span class="section-number-3">1.18</span> Basic Buffer Management</h3>
</div>
<div id="outline-container-sec-1-19" class="outline-3">
<h3 id="sec-1-19"><span class="section-number-3">1.19</span> Bookmark: save locations across Emacs sessions</h3>
<div class="outline-text-3" id="text-1-19">
<p>
when you read books, you usually cannot read all at once and place a bookmark to go back to continue reading later. Emacs allows you to bookmark too.
</p>

<table id="tab:-basic-emacs-bookmarking-commands" border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">Table 2:</span> this is a table for all the shortcuts for Bookmarking on Emacs</caption>

<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">Key</td>
<td class="left">Binding</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left"><code>C-x r m</code></td>
<td class="left">Command: <code>bookmark-set</code></td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">Set bookmark at point. After executing the command, a prompt asks for a name.</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">Enter the name and RET.</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left"><code>C-x r b</code></td>
<td class="left">Command: <code>bookmar-jump</code></td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">Jump to a saved bookmark, specified by user. TAB for getting bookmark list.</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left"><code>C-x r l</code></td>
<td class="left">Command: <code>bookmark-bmenu-list</code></td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">Open the list of all bookmarks.</td>
<td class="left">&#xa0;</td>
</tr>
</tbody>
</table>

<p>
Remember the key bindings are easy. You just need to remember that C-x r is the prefix for bookmark related commands. m stands for mark, meaning you mark something in some plaxce; b stands for bookmark, meaning you can switch to any bookmark quickly, similar to C-x b switches to buffers quickly. Finally, I means list for listing bookmarks, analogous to <code>ibuffer</code> for listing buffers. If you want to preserve the bookmarks across Emacs sessions, <code>C-x r l</code> to open the bookmark list and press s to save the list to file.
</p>

<p>
If you understand how to manage buffers,s managing bookmarks is the same, with different but similar key bindings. Finally, you cannotonly bookmark buffers that are associated with files, you can bookmark non-file buffers too:
</p>

<ol class="org-ol">
<li>Dired buffers
</li>
<li>Info buffers
</li>
<li>Man Pages
</li>
</ol>

<p>
A few useful key bindings when in <code>bookmark-bmenu-list</code>:
</p>
</div>
</div>

<div id="outline-container-sec-1-20" class="outline-3">
<h3 id="sec-1-20"><span class="section-number-3">1.20</span> Basic Motion Commands</h3>
</div>
<div id="outline-container-sec-1-21" class="outline-3">
<h3 id="sec-1-21"><span class="section-number-3">1.21</span> Useful Built-in key bindings for navigating pairs</h3>
</div>
<div id="outline-container-sec-1-22" class="outline-3">
<h3 id="sec-1-22"><span class="section-number-3">1.22</span> Basic editing commands</h3>
</div>
<div id="outline-container-sec-1-23" class="outline-3">
<h3 id="sec-1-23"><span class="section-number-3">1.23</span> Dynamic abbreviations</h3>
</div>
<div id="outline-container-sec-1-24" class="outline-3">
<h3 id="sec-1-24"><span class="section-number-3">1.24</span> kill ring</h3>
</div>
<div id="outline-container-sec-1-25" class="outline-3">
<h3 id="sec-1-25"><span class="section-number-3">1.25</span> Mark and region</h3>
</div>
<div id="outline-container-sec-1-26" class="outline-3">
<h3 id="sec-1-26"><span class="section-number-3">1.26</span> Mark ring</h3>
</div>
<div id="outline-container-sec-1-27" class="outline-3">
<h3 id="sec-1-27"><span class="section-number-3">1.27</span> Global Mark Ring</h3>
</div>
<div id="outline-container-sec-1-28" class="outline-3">
<h3 id="sec-1-28"><span class="section-number-3">1.28</span> Undo/Redo</h3>
</div>
<div id="outline-container-sec-1-29" class="outline-3">
<h3 id="sec-1-29"><span class="section-number-3">1.29</span> Search for Text</h3>
<div class="outline-text-3" id="text-1-29">
</div><div id="outline-container-sec-1-29-1" class="outline-4">
<h4 id="sec-1-29-1"><span class="section-number-4">1.29.1</span> Incremental Search</h4>
</div>
<div id="outline-container-sec-1-29-2" class="outline-4">
<h4 id="sec-1-29-2"><span class="section-number-4">1.29.2</span> Occur</h4>
</div>
<div id="outline-container-sec-1-29-3" class="outline-4">
<h4 id="sec-1-29-3"><span class="section-number-4">1.29.3</span> Query Replace</h4>
</div>
<div id="outline-container-sec-1-29-4" class="outline-4">
<h4 id="sec-1-29-4"><span class="section-number-4">1.29.4</span> Multi-occur</h4>
</div>
<div id="outline-container-sec-1-29-5" class="outline-4">
<h4 id="sec-1-29-5"><span class="section-number-4">1.29.5</span> Grep</h4>
</div>
</div>
<div id="outline-container-sec-1-30" class="outline-3">
<h3 id="sec-1-30"><span class="section-number-3">1.30</span> Modeline</h3>
<div class="outline-text-3" id="text-1-30">
<p>
<code>cs:ch-fr | buf | pos line | (major minor)</code>
cs - describes the character set of the text in the buffer. do you see the character <code>U</code> in the picture? It means your text is represented UTF-8 coding system.
</p>

<blockquote>
<p>
UTF-8 is a character encoding capable of encoding all possible characters, or code points, defined by Unicode and originally designed by Ken Thompson and Rob Pike.
</p>

<p>
The encoding is variable-length and uses 8-bit code units. It was designed for backward compatibility, with ASCII and to avoid the complications of endianness and byte order marsk in the alternative UTF-15 and UTF-32 encodings. The name is derived form Unicode (or Universal Coded Character Set) Transformation Format - 8-bit.
</p>
</blockquote>

<p>
If you type text in different human languages, and if the input method is on, to the left of the <code>U</code> appears the symbol of that language, i.e. \U, the backslash means Tex input method. 
C-\ prompts 
ch describes editing state of current buffer:
</p>
<ul class="org-ul">
<li>This shows two dashes ('-') if the buffer displayed in the window has the same contents as the corresponding file on the disk; i.e., if the buffer is "unmodified".
</li>
<li>If the buffer is modified, it shows two stars('**'). For a read-only buffer, it shows '%' if the buffer is modified, and '%%' otherwise. You can see that in the picture, the buffer is modified. 
</li>
</ul>

<p>
<code>fr</code> gives the selected frame name. A frame is a Emacs window in your OS. For example, these are two Emacs frames:
</p>
</div>
</div>

<div id="outline-container-sec-1-31" class="outline-3">
<h3 id="sec-1-31"><span class="section-number-3">1.31</span> MiniBuffer</h3>
<div class="outline-text-3" id="text-1-31">
<p>
<code>MiniBuffer</code> is the small area at the bottom of your Emacs screen.
The <code>MiniBuffer</code> is where Emacs commands read complicated arguments, such as file names, buffer names, Emacs command names, or Lisp expressions. When you execute <code>find-file</code>, it asks for your file from the <code>Mini-buffer</code>, which is one of <code>find-file</code> required argument. Remember I said earlier that in Emacs, everything is a function. <code>find-file</code> is a command 
</p>
</div>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Created: 2017-05-29 Mon 12:22</p>
<p class="creator"><a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.5.1 (<a href="http://orgmode.org">Org</a> mode 8.2.10)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
